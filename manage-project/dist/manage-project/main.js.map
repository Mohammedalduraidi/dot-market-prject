{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-employee/add-employ-modal.html","webpack:///./src/app/admin-employee/admin-employee.component.css","webpack:///./src/app/admin-employee/admin-employee.component.html","webpack:///./src/app/admin-employee/admin-employee.component.ts","webpack:///./src/app/admin-employee/update-employee-modal.html","webpack:///./src/app/admin-equipment/add-modal.html","webpack:///./src/app/admin-equipment/admin-equipment.component.css","webpack:///./src/app/admin-equipment/admin-equipment.component.html","webpack:///./src/app/admin-equipment/admin-equipment.component.ts","webpack:///./src/app/admin-equipment/update-modal.html","webpack:///./src/app/admin-project/add-project.html","webpack:///./src/app/admin-project/admin-project.component.css","webpack:///./src/app/admin-project/admin-project.component.html","webpack:///./src/app/admin-project/admin-project.component.ts","webpack:///./src/app/admin-project/update-project.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/splash-screen/splash-screen.component.css","webpack:///./src/app/splash-screen/splash-screen.component.html","webpack:///./src/app/splash-screen/splash-screen.component.ts","webpack:///./src/app/user-details/login-Modal2.html","webpack:///./src/app/user-details/user-details.component.css","webpack:///./src/app/user-details/user-details.component.html","webpack:///./src/app/user-details/user-details.component.ts","webpack:///./src/app/user-project/login-Modal1.html","webpack:///./src/app/user-project/user-project.component.css","webpack:///./src/app/user-project/user-project.component.html","webpack:///./src/app/user-project/user-project.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1 mat-dialog-title>Add Employee</h1>\\r\\n<div mat-dialog-content>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"name\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Employee Nationality\\\" [(ngModel)]=\\\"Nationality\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Employee Job Title\\\" [(ngModel)]=\\\"jobTitle\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"Cancel()\\\">Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"addEmployee(name , Nationality,jobTitle)\\\">Add</button>\\r\\n</div>\"","module.exports = \".icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/admin-equipment\\\">Manage Project</a>\\n  <div class=\\\"navbar-expand mr-auto\\\">\\n    <div class=\\\"navbar-nav\\\">\\n\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-equipment\\\">Admin equipment</a>\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-employees\\\">Admin employees</a>\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-projects\\\">Admin projects</a>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\n    <div class=\\\"navbar-brand\\\">\\n      <a>\\n        <mat-icon class=\\\"icon\\\" (click)=\\\"logout()\\\">logout</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <button button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"openAddEmployeeModal()\\\">Add Employee\\n    <mat-icon aria-label=\\\"icon-button with a plus icon\\\">add</mat-icon>\\n  </button>\\n</div>\\n<br><br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 d-flex align-items-stretch\\\">\\n\\n      <div class=\\\"card\\\" *ngFor=\\\"let employee of employeesData\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <h5 class=\\\"card-title\\\">Employee Name: {{employee.name}}</h5>\\n          <h5 class=\\\"card-text\\\">Nationality: {{employee.Nationality}} </h5>\\n          <h5 class=\\\"card-text\\\">Job Title: {{employee.jobTitle}} </h5>\\n          <a (click)=\\\"deleteEmployee(employee._id)\\\">Delete\\n            <mat-icon aria-label=\\\" icon-button with a heart icon\\\">delete</mat-icon>\\n          </a>\\n          <a (click)=\\\"openUpdateModal(employee._id)\\\"> Update\\n            <mat-icon aria-label=\\\" icon-button with a heart icon\\\">update</mat-icon>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport Axios from 'axios';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nvar employeeId = ''\n@Component({\n  selector: 'app-admin-employee',\n  templateUrl: './admin-employee.component.html',\n  styleUrls: ['./admin-employee.component.css']\n})\nexport class AdminEmployeeComponent implements OnInit {\n\n  employeesData = []\n  constructor(private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.retrieveEmployeeData()\n  }\n  logout = () => {\n    Axios.get('/logout')\n      .then(() => {\n        this.router.navigate(['user-project'])\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n  //opent the add employee modal\n  openAddEmployeeModal = () => {\n    this.dialog.open(addEmployeeModal);\n  }\n  //open the update modal\n  openUpdateModal = (id) => {\n    employeeId = id\n    this.dialog.open(updateEmployeeModal);\n  }\n\n  //fetching the employees data from data-base\n  retrieveEmployeeData = () => {\n    let that = this\n    Axios.get('/retrieveEmployeeData')\n      .then((response) => {\n        console.log(response);\n        that.employeesData = response.data\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  };\n\n  //delete employee from data-base\n  deleteEmployee = (equipmentId: any) => {\n    Axios.post('/deleteEmployee', { id: equipmentId })\n      .then((response) => {\n        alert('the employee has been deleted');\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  };\n}\n@Component({\n  selector: 'add-employ-modal',\n  templateUrl: 'add-employ-modal.html',\n})\nexport class addEmployeeModal {\n\n  constructor(\n    public dialogRef: MatDialogRef<AdminEmployeeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: addEmployeeModal) { }\n\n  Cancel(): void {\n    this.dialogRef.close();\n  }\n\n  //add empolyee\n  addEmployee = (name = '', Nationality = '', jobTitle = '') => {\n    Axios.post('/addEmployee', { name, Nationality, jobTitle })\n      .then((response) => {\n        window.location.reload()\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n}\n\n\n\n// Update Modal Component\n@Component({\n  selector: 'update-employee-modal',\n  templateUrl: 'update-employee-modal.html',\n})\nexport class updateEmployeeModal {\n\n  constructor(\n    public dialogRef: MatDialogRef<AdminEmployeeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: updateEmployeeModal) { }\n\n  Cancel(): void {\n    this.dialogRef.close();\n  }\n\n  //Update Employee \n  updateEmployee = (name = '', Nationality = '', jobTitle = '') => {\n    Axios.put('/updateEmployee', { name, Nationality, jobTitle, id: employeeId })\n      .then((response) => {\n        alert('the employee has been updated');\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n}","module.exports = \"<h1 mat-dialog-title>Update Employee</h1>\\r\\n<div mat-dialog-content>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"name\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Employee Nationality\\\" [(ngModel)]=\\\"Nationality\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Employee Job Title\\\" [(ngModel)]=\\\"jobTitle\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"Cancel()\\\">Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"updateEmployee(name,Nationality,jobTitle)\\\">Update</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Add Equipment</h1>\\r\\n<div mat-dialog-content>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Equipment Name\\\" [(ngModel)]=\\\"name\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Equipment serial-number\\\" [(ngModel)]=\\\"serialNumber\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n\\r\\n    <input type=\\\"file\\\" placeholder=\\\"equipment attachment\\\" (change)=\\\"uploadImage($event)\\\">\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"Cancel()\\\">Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"addEquiepment(name , serialNumber)\\\">Add</button>\\r\\n</div>\\r\\n\"","module.exports = \".icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\\r\\n  \\r\\n  .img{\\r\\n   width:150px;\\r\\n   height: 100px;\\r\\n }\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/admin-equipment\\\">Manage Project</a>\\n  <div class=\\\"navbar-expand mr-auto\\\">\\n    <div class=\\\"navbar-nav\\\">\\n\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-equipment\\\">Admin equipment</a>\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-employees\\\">Admin employees</a>\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-projects\\\">Admin projects</a>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\n    <div class=\\\"navbar-brand\\\">\\n      <a>\\n        <mat-icon class=\\\"icon\\\" (click)=\\\"logout()\\\">logout</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"container\\\">\\n  <button button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"openAddModal()\\\">Add Equipment\\n    <mat-icon aria-label=\\\"icon-button with a plus icon\\\">add</mat-icon>\\n  </button>\\n</div>\\n<br><br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 d-flex align-items-stretch\\\">\\n\\n      <div class=\\\"card\\\" *ngFor=\\\"let equip of equipmentsData\\\">\\n        <div class=\\\"card-body\\\">\\n          <img class=\\\"card-img-top img\\\" src=\\\"{{equip.image}}\\\" alt='Equipment image'>\\n          <h5 class=\\\"card-title\\\">Equipment Name: {{equip.name}}</h5>\\n          <h5 class=\\\"card-text\\\">Serial-Sumbe: {{equip.serialNumber}} </h5>\\n          <a (click)=\\\"deleteEquipment(equip._id)\\\">Delete\\n            <mat-icon aria-label=\\\" icon-button with a heart icon\\\">delete</mat-icon>\\n          </a>\\n          <a (click)=\\\"openUpdateModal(equip._id)\\\"> Update\\n            <mat-icon aria-label=\\\" icon-button with a heart icon\\\">update</mat-icon>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router } from '@angular/router';\nimport Axios from 'axios';\nvar equipmentId = ''\n@Component({\n  selector: 'app-admin-equipment',\n  templateUrl: './admin-equipment.component.html',\n  styleUrls: ['./admin-equipment.component.css']\n})\nexport class AdminEquipmentComponent implements OnInit {\n  equipmentsData = []\n  constructor(private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n\n    this.retrieveEquipment()\n  }\n  logout = () => {\n    Axios.get('/logout')\n      .then(() => {\n        this.router.navigate(['user-project'])\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n\n  //Open the add model\n  openAddModal = () => {\n    this.dialog.open(addModal);\n  }\n  //open the update modal\n  openUpdateModal = (id) => {\n    equipmentId = id\n    this.dialog.open(updateModal);\n  }\n  //fetching the equipments from data-base\n  retrieveEquipment = () => {\n    let that = this\n    Axios.get('/retrieveEquipment')\n      .then((response) => {\n\n        for (var i = 0; i < response.data.length; i++) {\n          if (response.data[i].image === null) {\n            response.data['image'] = 'https://clicktrans.com/bundles/app/images/picture-default.png'\n          }\n        }\n\n        that.equipmentsData = response.data\n        console.log(that.equipmentsData)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  };\n\n  //delete the equipment from data-base\n  deleteEquipment = (equipmentId: any) => {\n    Axios.post('/deleteEquipment', { id: equipmentId })\n      .then((response) => {\n        alert('the equipment has been deleted');\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  };\n\n\n}\n\n// Add Modal component\n@Component({\n  selector: 'add-modal',\n  templateUrl: 'add-modal.html',\n})\nexport class addModal {\n  selectedImage: File;\n  constructor(\n    public dialogRef: MatDialogRef<AdminEquipmentComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: addModal) { }\n\n  Cancel(): void {\n    this.dialogRef.close();\n  }\n  uploadImage = (event) => {\n    let photo = event.target.files[0];\n    let that = this\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(photo);\n    fileReader.onload = (e: any) => {\n      that.selectedImage = e.target.result;\n    }\n  }\n  addEquiepment = (name = '', serialNumber = '') => {\n    Axios.post('/addEquiepment', { name, serialNumber, image: this.selectedImage })\n      .then((response) => {\n        window.location.reload()\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n}\n\n\n\n// Update Modal Component\n@Component({\n  selector: 'update-modal',\n  templateUrl: 'update-modal.html',\n})\nexport class updateModal {\n  selectedImage: File;\n  constructor(\n    public dialogRef: MatDialogRef<AdminEquipmentComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: updateModal) { }\n\n  Cancel(): void {\n    this.dialogRef.close();\n  }\n  uploadImage = (event) => {\n    let photo = event.target.files[0];\n    let that = this\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(photo);\n    fileReader.onload = (e: any) => {\n      that.selectedImage = e.target.result;\n    }\n  }\n  //update the equipment\n  updateEquipment = (name = '', serialNumber = '') => {\n    Axios.put('/updateEquipment', { name, serialNumber, image: this.selectedImage, id: equipmentId })\n      .then((response) => {\n        alert('the equipment has been updated');\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n}","module.exports = \"<h1 mat-dialog-title>Update Equipment</h1>\\r\\n<div mat-dialog-content>\\r\\n        <input type=\\\"file\\\" placeholder=\\\"update attachment\\\" (change)=\\\"uploadImage($event)\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"equipment name\\\" [(ngModel)]=\\\"name\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"equipment serialNumber\\\" [(ngModel)]=\\\"serialNumber\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"Cancel()\\\">Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"updateEquipment(name,serialNumber)\\\">Update</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Add Project</h1>\\r\\n<div mat-dialog-content>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Project Name\\\" [(ngModel)]=\\\"name\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Project Type\\\" [(ngModel)]=\\\"type\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"From Date\\\" [(ngModel)]=\\\"fromDate\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"To date\\\" [(ngModel)]=\\\"toDate\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"Cancel()\\\">Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"addProject(name , type,fromDate, toDate)\\\">Add</button>\\r\\n</div>\"","module.exports = \".icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/admin-equipment\\\">Manage Project</a>\\n  <div class=\\\"navbar-expand mr-auto\\\">\\n    <div class=\\\"navbar-nav\\\">\\n\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-equipment\\\">Admin equipment</a>\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-employees\\\">Admin employees</a>\\n      <a class=\\\"nav-item nav-link active\\\" routerLink=\\\"/admin-projects\\\">Admin projects</a>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\n    <div class=\\\"navbar-brand\\\">\\n      <a>\\n        <mat-icon class=\\\"icon\\\" (click)=\\\"logout()\\\">logout</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <button button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"openProjectModal()\\\">Add Project\\n    <mat-icon aria-label=\\\"icon-button with a plus icon\\\">add</mat-icon>\\n  </button>\\n</div>\\n<br><br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 d-flex align-items-stretch\\\">\\n\\n      <div class=\\\"card\\\" *ngFor=\\\"let project of projectData\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <h5 class=\\\"card-title\\\">Project Name: {{project.name}}</h5>\\n          <h5 class=\\\"card-text\\\">Project Type: {{project.type}} </h5>\\n          <h5 class=\\\"card-text\\\">From date: {{project.fromDate}} </h5>\\n          <h5 class=\\\"card-text\\\">To date: {{project.toDate}} </h5>\\n          <a (click)=\\\"deleteProject(project._id)\\\">Delete\\n            <mat-icon aria-label=\\\" icon-button with a heart icon\\\">delete</mat-icon>\\n          </a>\\n          <a (click)=\\\"openUpdateModal(project._id)\\\"> Update\\n            <mat-icon aria-label=\\\" icon-button with a heart icon\\\">update</mat-icon>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router } from '@angular/router';\nimport Axios from 'axios';\nvar projectID = ''\n@Component({\n  selector: 'app-admin-project',\n  templateUrl: './admin-project.component.html',\n  styleUrls: ['./admin-project.component.css']\n})\nexport class AdminProjectComponent implements OnInit {\n  projectData = []\n  constructor(private router: Router, public dialog: MatDialog) { }\n  ngOnInit() {\n    this.retrieveProjectData()\n  }\n  logout = () => {\n    Axios.get('/logout')\n      .then(() => {\n        this.router.navigate(['user-project'])\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n\n  //open the add prject modal\n  openProjectModal = () => {\n    this.dialog.open(addProject);\n  }\n\n  //open the update modal\n  openUpdateModal = (id) => {\n    projectID = id\n    this.dialog.open(updateProject);\n  }\n  //fetching the project data from data-base\n  retrieveProjectData = () => {\n    let that = this\n    Axios.get('/retrieveProjectData')\n      .then((response) => {\n        console.log(response);\n        that.projectData = response.data\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  };\n\n  //delete project from data-base\n  deleteProject = (id: any) => {\n    Axios.post('/deleteProject', { id: id })\n      .then((response) => {\n        alert('the employee has been deleted');\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  };\n\n}\n\n\n// Add Modal component\n@Component({\n  selector: 'add-project',\n  templateUrl: 'add-project.html',\n})\nexport class addProject {\n\n  constructor(\n    public dialogRef: MatDialogRef<AdminProjectComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: addProject) { }\n\n  Cancel(): void {\n    this.dialogRef.close();\n  }\n\n  addProject = (name = '', type = '', fromDate = '', toDate = '') => {\n    Axios.post('/addProject', { name, type, fromDate, toDate })\n      .then((response) => {\n        window.location.reload()\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n}\n\n\n\n// Update Modal Component\n@Component({\n  selector: 'update-project',\n  templateUrl: 'update-project.html',\n})\nexport class updateProject {\n\n  constructor(\n    public dialogRef: MatDialogRef<AdminProjectComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: updateProject) { }\n\n  Cancel(): void {\n    this.dialogRef.close();\n  }\n\n  //update the equipment\n  updateProject = (name = '', type = '', fromDate = '', toDate = '') => {\n    Axios.put('/updateProject', { name, type, fromDate, toDate, id: projectID })\n      .then((response) => {\n        alert('the project has been updated');\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n}","module.exports = \"<h1 mat-dialog-title>Update project</h1>\\r\\n<div mat-dialog-content>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Project Name\\\" [(ngModel)]=\\\"name\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Project Type\\\" [(ngModel)]=\\\"type\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"From Date\\\" [(ngModel)]=\\\"fromDate\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"To date\\\" [(ngModel)]=\\\"toDate\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"Cancel()\\\">Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"updateProject(name,type,fromDate,toDate)\\\">Update</button>\\r\\n</div>\"","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'manage-project';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// import angular routing\nimport { RouterModule, Routes } from '@angular/router';\n\n//import components\nimport { AppComponent } from './app.component';\nimport { SplashScreenComponent } from './splash-screen/splash-screen.component';\nimport { AdminEmployeeComponent, addEmployeeModal, updateEmployeeModal } from './admin-employee/admin-employee.component';\nimport { AdminEquipmentComponent, addModal, updateModal } from './admin-equipment/admin-equipment.component';\nimport { AdminProjectComponent, addProject, updateProject } from './admin-project/admin-project.component';\nimport { UserDetailsComponent, LoginModal2 } from './user-details/user-details.component';\nimport { UserProjectComponent, LoginModal1 } from './user-project/user-project.component';\n\n\n//import material-ui and other packeges\nimport { FormsModule } from '@angular/forms';\nimport { NgDragDropModule } from 'ng-drag-drop';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: SplashScreenComponent\n  },\n  {\n    path: 'admin-equipment',\n    component: AdminEquipmentComponent\n  },\n  {\n    path: 'admin-employees',\n    component: AdminEmployeeComponent\n  },\n  {\n    path: 'admin-projects',\n    component: AdminProjectComponent\n  },\n  {\n    path: 'user-project',\n    component: UserProjectComponent\n  },\n  {\n    path: 'user-details',\n    component: UserDetailsComponent\n  }\n]\n@NgModule({\n  declarations: [\n    AppComponent,\n    SplashScreenComponent,\n    AdminEmployeeComponent,\n    AdminEquipmentComponent,\n    AdminProjectComponent,\n    UserDetailsComponent,\n    UserProjectComponent,\n    LoginModal1,\n    LoginModal2,\n    addModal,\n    updateModal,\n    addEmployeeModal,\n    updateEmployeeModal,\n    addProject,\n    updateProject\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatIconModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatTableModule,\n    NgDragDropModule.forRoot(),\n    FormsModule,\n    MatCardModule,\n    FlexLayoutModule,\n\n  ],\n  exports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatIconModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatTableModule,\n    MatCardModule\n  ], entryComponents: [\n    LoginModal1,\n    LoginModal2,\n    addModal,\n    updateModal,\n    addEmployeeModal,\n    updateEmployeeModal,\n    addProject,\n    updateProject\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div>\\n  <img src='https://media.licdn.com/dms/image/C560BAQGrzdagbTuBmg/company-logo_200_200/0?e=1544659200&v=beta&t=hiDsFnIbA_WjGTDU1nOrL66DZP7VNgEHCJgtt1gcuz8'\\n    alt='' class='img'>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-splash-screen',\n  templateUrl: './splash-screen.component.html',\n  styleUrls: ['./splash-screen.component.css']\n})\nexport class SplashScreenComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.router.navigate(['user-project'])\n    }, 3000);\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Login as admin</h1>\\r\\n<div mat-dialog-content>\\r\\n\\t <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Enter Admin Username\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  \\r\\n <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"password\\\" placeholder=\\\"Enter Admin Password\\\" [(ngModel)]=\\\"password\\\" >\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"login(name,password)\\\">Submit</button>\\r\\n</div>\"","module.exports = \".icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\\r\\n  \\r\\n  .example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .btn{\\r\\n    margin-left: 100px;\\r\\n  }\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/user-project\\\">Manage Project</a>\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\n    <div class=\\\"navbar-brand\\\">\\n      <a (click)=\\\"openModal()\\\">Admin Login\\n        <mat-icon class=\\\"icon\\\">person</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n<h1>Project Name : {{projectName}}</h1>\\n<br>\\n<div class=\\\"container\\\">\\n  <h3>Employees</h3>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">System Employees</div>\\n        <ul class=\\\"list-group\\\">\\n          <li *ngFor=\\\"let item of employeeData\\\" draggable [dragData]=\\\"item\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"panel panel-default\\\" droppable (onDrop)=\\\"onItemDropEmployee($event)\\\">\\n        <div class=\\\"panel-heading\\\">Assigned Employees</div>\\n        <div class=\\\"panel-body\\\">\\n          <li *ngFor=\\\"let item of droppedEmployee\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n\\n        </div>\\n        <br>\\n        <a (click)=\\\"deleteEmployee()\\\"><button class=\\\"btn btn-danger\\\" [hidden]=\\\"deleteButton\\\">remove</button></a>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <br>\\n  <h3>Equipment</h3>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">System Equipment</div>\\n        <ul class=\\\"list-group\\\">\\n          <li *ngFor=\\\"let item of equipmentData\\\" draggable [dragData]=\\\"item\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"panel panel-default\\\" droppable (onDrop)=\\\"onItemDropEquipment($event)\\\">\\n        <div class=\\\"panel-heading\\\">Assigned Equipment</div>\\n        <div class=\\\"panel-body\\\">\\n          <li *ngFor=\\\"let item of droppedEquipment\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n        </div>\\n        <br>\\n        <a (click)=\\\"deleteEquipment()\\\"><button class=\\\"btn btn-danger\\\" [hidden]=\\\"deleteButtonEquipment\\\">remove</button></a>\\n      </div>\\n    </div>\\n  </div>\\n  <br><br>\\n  <a routerLink=\\\"/user-project\\\"><button class=\\\"btn btn btn-primary\\\">Back</button></a>\\n  <button class=\\\"btn btn btn-success\\\" (click)=\\\"save(droppedEquipment, droppedEmployee)\\\">Save</button>\\n</div>\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router } from '@angular/router';\nimport axios from \"axios\";\nimport { saveSomeData } from '../user-project/user-project.component';\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  deleteButtonEquipment = true;\n  deleteButton = true;\n  droppedEmployee = [];\n  droppedEquipment = [];\n  employeeData = [];\n  equipmentData = [];\n  id = '';\n  projectName = '';\n\n  constructor(private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getEmployee();\n    this.getEquipment();\n    this.projectName = saveSomeData['projectName'];\n    this.id = saveSomeData['id']\n  }\n  //open login modal\n  openModal = () => {\n    this.dialog.open(LoginModal2);\n  }\n  //get equipments\n  getEquipment() {\n    axios.get('/getEquipment')\n      .then((data) => {\n        for (var i = 0; i < data.data.length; i++) {\n          this.equipmentData.push(data.data[i]);\n        }\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n\n  //fetch the data from the data-base\n  getEmployee() {\n    axios.get('/getEmployee')\n      .then((data) => {\n        for (var i = 0; i < data.data.length; i++) {\n          this.employeeData.push(data.data[i])\n        }\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n\n  //remove employee from assgined droppedEmployee array\n  deleteEmployee() {\n    var pop = this.droppedEmployee.pop()\n    this.employeeData.push(pop)\n    this.deleteButton = true\n    return pop\n  }\n\n  //remove equipment from assgined droppedEquipment array\n  deleteEquipment() {\n    var pop = this.droppedEquipment.pop()\n    this.equipmentData.push(pop)\n    this.deleteButtonEquipment = true\n    return pop\n  }\n  //to push the employ to the droppedEmployee array\n  onItemDropEmployee(e: any) {\n    if (this.droppedEmployee.length === 0) {\n      for (var i = 0; i < this.employeeData.length; i++) {\n        if (e.dragData.name === this.employeeData[i].name) {\n          this.droppedEmployee.push(e.dragData);\n          this.removeEmployee(e.dragData, this.employeeData)\n        }\n      }\n    } else {\n      alert(\"you already assgind an employee\")\n    }\n    this.deleteButton = false\n  }\n\n  // to push the equipment to the droppedEquipment array\n  onItemDropEquipment(e: any) {\n    if (this.droppedEquipment.length === 0) {\n      for (var i = 0; i < this.equipmentData.length; i++) {\n        if (e.dragData.name === this.equipmentData[i].name) {\n          this.droppedEquipment.push(e.dragData);\n          this.removeEquipment(e.dragData, this.equipmentData);\n        }\n      }\n    } else {\n      alert(\"you already assigned and equipment\")\n    }\n    this.deleteButtonEquipment = false;\n  }\n\n  // save the dropped items in the database\n  save() {\n    // checking before http request, if the user has drag and drop his employee or equipment\n    if (this.droppedEmployee[0] === undefined) {\n      alert('please assign employee before save <3 ')\n    } else if (this.droppedEquipment[0] === undefined) {\n      alert('please assign equipment before save <3 ')\n    } else {\n      return axios.put(\"/saveItems\", { id: this.id, employee: this.droppedEmployee[0].name, equipment: this.droppedEquipment[0].name })\n        .then(() => {\n          this.router.navigate(['user-project']);\n        })\n        .catch((err) => {\n          throw err;\n        })\n    }\n  }\n  // remove equipment item that has been dragged\n  removeEquipment(item: any, list: Array<any>) {\n    let index = list.map((e) => {\n      return e.name\n    }).indexOf(item.name);\n    list.splice(index, 1);\n  }\n\n  //remove equipment item that has been dragged\n  removeEmployee(item: any, list: Array<any>) {\n    let index = list.map((e) => {\n      return e.name\n    }).indexOf(item.name);\n    list.splice(index, 1);\n  }\n}\n\n\n@Component({\n  selector: 'login-Modal2',\n  templateUrl: 'login-Modal2.html',\n})\nexport class LoginModal2 {\n  constructor(\n    public dialogRef: MatDialogRef<UserDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: LoginModal2,\n    private router: Router) { }\n\n  cancel = (): void => {\n    this.dialogRef.close();\n  }\n  login = (name = '', password = '') => {\n    if (name.length === 0 && password.length === 0) {\n      alert('please fill the inputs')\n    } else {\n      axios({\n        method: 'POST',\n        url: '/login',\n        data: { username: name, password: password }\n      })\n        .then((res) => {\n          this.router.navigate(['admin-equipment']);\n        })\n        .catch((err) => {\n          alert('user not found');\n        })\n    }\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>Login as admin</h1>\\r\\n<div mat-dialog-content>\\r\\n\\t <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Enter Admin Username\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  \\r\\n <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"password\\\" placeholder=\\\"Enter Admin Password\\\" [(ngModel)]=\\\"password\\\" >\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"login(name,password)\\\">Submit</button>\\r\\n</div>\"","module.exports = \".icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n    width: 100%;\\r\\n  } \"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-5\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/user-project\\\">Manage Project</a>\\r\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\r\\n    <div class=\\\"navbar-brand\\\">\\r\\n      <a (click)=\\\"openModal()\\\">Admin Login\\r\\n        <mat-icon class=\\\"icon\\\">person</mat-icon>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <ng-container matColumnDef=\\\"projectName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Project Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"><a (click)=\\\"forTheNextComponent(element._id, element.name)\\\">{{element.name}}\\r\\n      </a></td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"employees\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> #Employees </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.employee}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"equipment\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> #Equipment </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.equipment}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"fromDate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> From Date </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fromDate}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"toDate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> To Date </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.toDate}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router } from '@angular/router';\nimport axios from \"axios\";\n\nexport var saveSomeData = {}\n\n@Component({\n  selector: 'app-user-project',\n  templateUrl: './user-project.component.html',\n  styleUrls: ['./user-project.component.css']\n})\nexport class UserProjectComponent implements OnInit {\n  ProjectData = [];\n  projectName = \"\"\n  dataSource = [];\n  projectData = []\n  displayedColumns: string[] = ['projectName', 'employees', 'equipment', 'fromDate', 'toDate'];\n  constructor(public dialog: MatDialog, private router: Router) { }\n\n  ngOnInit() {\n    this.getProjects()\n  }\n  openModal = () => {\n    this.dialog.open(LoginModal1);\n  }\n\n  getProjects() {\n    axios.get('/getProjects')\n      .then((response) => {\n        for (var i = 0; i < response.data.length; i++) {\n          this.ProjectData.push(response.data[i])\n        }\n        this.dataSource = this.ProjectData;\n\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  //this function to go to th user details page and send the id and name of te project that been selected\n  forTheNextComponent(id = '', projectName = '') {\n    saveSomeData = { id: id, projectName: projectName }\n    this.router.navigate(['user-details']);\n\n  }\n}\n\n\n@Component({\n  selector: 'login-Modal1',\n  templateUrl: 'login-Modal1.html',\n})\nexport class LoginModal1 {\n  constructor(\n    public dialogRef: MatDialogRef<UserProjectComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: LoginModal1,\n    private router: Router) { }\n\n  cancel = (): void => {\n    this.dialogRef.close();\n  }\n  login = (name = '', password = '') => {\n    if (name.length === 0 && password.length === 0) {\n      alert('please fill the inputs')\n    } else {\n      axios({\n        method: 'POST',\n        url: '/login',\n        data: { username: name, password: password }\n      })\n        .then((res) => {\n          this.router.navigate(['admin-equipment']);\n        })\n        .catch((err) => {\n          alert('user not found');\n        })\n    }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}